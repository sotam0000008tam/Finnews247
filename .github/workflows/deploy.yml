name: Deploy Finnews247 to Windows VPS

on:
  push:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: deploy-finnews247
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: self-hosted
    timeout-minutes: 40
    defaults:
      run:
        shell: pwsh

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Ensure target folders
        run: |
          $dst = 'C:\apps\finnews247'
          New-Item -ItemType Directory -Force -Path $dst | Out-Null
          New-Item -ItemType Directory -Force -Path "$dst\logs" | Out-Null

      - name: Stop scheduled task if running
        run: |
          $task = 'finnews247'
          schtasks /Query /TN $task *> $null
          if ($LASTEXITCODE -eq 0) { schtasks /End /TN $task *> $null }

      - name: Clean target (keep logs)
        run: |
          $dst = 'C:\apps\finnews247'
          Get-ChildItem $dst -Force | Where-Object { $_.Name -ne 'logs' } |
            Remove-Item -Recurse -Force -ErrorAction SilentlyContinue
          New-Item -ItemType Directory -Force -Path "$dst\public" | Out-Null
          $img = Join-Path $dst 'public\images'
          if (Test-Path $img) {
            $itm = Get-Item $img -Force
            if ($itm.Attributes -band [IO.FileAttributes]::ReparsePoint) { cmd /c rmdir "$img" }
          }

      - name: Copy repo to target
        run: |
          $src = "$env:GITHUB_WORKSPACE"
          $dst = 'C:\apps\finnews247'
          robocopy $src $dst /MIR /XD .git .github node_modules .next logs > $null
          $rc = $LASTEXITCODE
          if ($rc -ge 8) { exit $rc }

      - name: Strip UTF-8 BOM in JSON
        run: |
          $dst = 'C:\apps\finnews247'
          $enc = New-Object System.Text.UTF8Encoding($false)
          Get-ChildItem "$dst\data" -Filter *.json -Recurse -ErrorAction SilentlyContinue | ForEach-Object {
            $content = Get-Content $_.FullName -Raw
            [System.IO.File]::WriteAllText($_.FullName, $content, $enc)
          }

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.20.0'

      - name: Install dependencies
        working-directory: 'C:\apps\finnews247'
        run: npm ci || npm install

      - name: Build Next.js
        working-directory: 'C:\apps\finnews247'
        run: npm run build

      - name: Create start script
        run: |
          $dst = 'C:\apps\finnews247'
          $lines = @(
            '@echo off'
            'cd /d C:\apps\finnews247'
            'set NODE_ENV=production'
            'set PORT=80'
            '"C:\Program Files\nodejs\node.exe" node_modules\next\dist\bin\next start -p %PORT% >> "C:\apps\finnews247\logs\out.log" 2>> "C:\apps\finnews247\logs\err.log"'
          )
          Set-Content -Path "$dst\start_finnews247.cmd" -Value $lines -Encoding ASCII

      - name: Register/Update scheduled task
        run: schtasks /Create /TN "finnews247" /TR "C:\apps\finnews247\start_finnews247.cmd" /SC ONSTART /RU SYSTEM /RL HIGHEST /F

      - name: Start app
        run: |
          schtasks /Run /TN "finnews247"
          Start-Sleep -Seconds 6

      - name: Health check
        run: |
          $ok = $true
          try {
            $r1 = Invoke-WebRequest -Uri 'http://127.0.0.1/' -UseBasicParsing -TimeoutSec 15
            $r2 = Invoke-WebRequest -Uri 'http://127.0.0.1/logo.png' -UseBasicParsing -TimeoutSec 15
            if ($r1.StatusCode -ne 200 -or $r2.StatusCode -ne 200) { $ok = $false }
          } catch { $ok = $false }
          if (-not $ok) { throw "Health check failed." }
          Write-Host "OK"
