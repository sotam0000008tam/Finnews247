name: "üöÄ Deploy Finnews247 to Windows VPS"

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - "data/**"
      - "pages/**"
      - "components/**"
      - "public/**"
      - "lib/**"
      - "next.config.js"
      - "package.json"
      - "package-lock.json"
      - ".github/workflows/deploy.yml"

jobs:
  deploy:
    runs-on: self-hosted

    # ‚¨áÔ∏è √©p npm KH√îNG ·ªü production mode trong job n√†y
    env:
      NPM_CONFIG_PRODUCTION: "false"
      npm_config_production: "false"
      npm_config_omit: ""
      NODE_ENV: "production"

    steps:
      - name: "üì• Checkout repository"
        uses: actions/checkout@v4

      - name: "üìÅ Ensure target folders"
        shell: powershell
        run: |
          $dst = 'C:\apps\finnews247'
          New-Item -ItemType Directory -Force -Path $dst | Out-Null
          New-Item -ItemType Directory -Force -Path "$dst\logs" | Out-Null

      - name: "üõë Stop scheduled task (if running)"
        shell: powershell
        run: |
          schtasks /End /TN "finnews247" 2>$null
          Start-Sleep -Seconds 2

      - name: "üîÑ Sync repo ‚Üí C:\\apps\\finnews247 (mirror, keep logs)"
        shell: powershell
        run: |
          $src = "${env:GITHUB_WORKSPACE}"
          $dst = 'C:\apps\finnews247'
          robocopy $src $dst /MIR /XD .git .github node_modules .next logs | Out-Null
          $code = $LASTEXITCODE
          if ($code -le 7) { exit 0 } else { exit $code }

      - name: "üßπ Strip BOM from JSON (prevent 500)"
        shell: powershell
        run: |
          $dir = 'C:\apps\finnews247\data'
          if (Test-Path $dir) {
            Get-ChildItem $dir -Filter *.json -Recurse | ForEach-Object {
              $bytes = [System.IO.File]::ReadAllBytes($_.FullName)
              if ($bytes.Length -ge 3 -and $bytes[0] -eq 0xEF -and $bytes[1] -eq 0xBB -and $bytes[2] -eq 0xBF) {
                $content = [System.Text.Encoding]::UTF8.GetString($bytes,3,$bytes.Length-3)
                [System.IO.File]::WriteAllText($_.FullName, $content, [System.Text.Encoding]::UTF8)
              }
            }
          }

      - name: "üü¢ Use Node.js 22"
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      # An to√†n: xo√° c·∫•u h√¨nh npm production/omit ·ªü c·∫•p user c·ªßa runner (n·∫øu c√≥)
      - name: "üßØ Reset npm production flags (safety)"
        shell: powershell
        continue-on-error: true
        run: |
          npm config delete production
          npm config delete omit

      # ‚¨áÔ∏è CH·∫†Y B·∫∞NG CMD ƒë·ªÉ c·∫£nh b√°o stderr kh√¥ng l√†m fail step
      - name: "üì¶ Install dependencies (include dev)"
        shell: cmd
        working-directory: C:\apps\finnews247
        run: |
          npm ci --no-audit --no-fund --include=dev || npm install --no-audit --no-fund --include=dev

      - name: "üèóÔ∏è Build (Next.js)"
        shell: cmd
        working-directory: C:\apps\finnews247
        run: |
          npm run build

      - name: "üßæ Create start script (CMD)"
        shell: powershell
        run: |
          $dst = 'C:\apps\finnews247'
          $script = @"
          @echo off
          cd /d C:\apps\finnews247
          set "NODE_ENV=production"
          "C:\Program Files\nodejs\node.exe" node_modules\next\dist\bin\next start -p 80 1>>"C:\apps\finnews247\logs\out.log" 2>>"C:\apps\finnews247\logs\err.log"
          "@
          Set-Content -Path "$dst\start_finnews247.cmd" -Value $script -Encoding ASCII -NoNewline

      - name: "üóìÔ∏è Create/Update Windows Scheduled Task"
        shell: powershell
        run: |
          $taskName = "finnews247"
          $exists = schtasks /Query /TN $taskName 2>$null
          if (-not $?) {
            schtasks /Create /TN $taskName /SC ONSTART /RU SYSTEM /RL HIGHEST /TR "C:\apps\finnews247\start_finnews247.cmd" /F
          } else {
            schtasks /Change /TN $taskName /TR "C:\apps\finnews247\start_finnews247.cmd"
          }

      - name: "‚ñ∂Ô∏è Start app & health check"
        shell: powershell
        run: |
          schtasks /Run /TN "finnews247" | Out-Null
          Start-Sleep -Seconds 3
          try {
            $r = Invoke-WebRequest -Uri "http://127.0.0.1/" -UseBasicParsing -TimeoutSec 8
            if ($r.StatusCode -lt 200 -or $r.StatusCode -ge 500) { throw "Bad status: $($r.StatusCode)" }
          } catch {
            Write-Error "Health check failed: $($_.Exception.Message)"
          }
