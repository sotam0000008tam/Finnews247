name: üöÄ Deploy Finnews247 to Windows VPS

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'data/**'
      - 'pages/**'
      - 'components/**'
      - 'public/**'
      - 'lib/**'
      - 'next.config.js'
      - 'package.json'
      - 'package-lock.json'
      - '.github/workflows/deploy.yml'

jobs:
  deploy:
    runs-on: self-hosted
    defaults:
      run:
        shell: powershell

    steps:
      - name: üì• Checkout repository
        uses: actions/checkout@v4

      - name: üìÅ Ensure target folders
        run: |
          New-Item -ItemType Directory -Force -Path 'C:\apps\finnews247' | Out-Null
          New-Item -ItemType Directory -Force -Path 'C:\apps\finnews247\logs' | Out-Null
          New-Item -ItemType Directory -Force -Path 'C:\ops\finnews247' | Out-Null

      # KH√îNG ƒë·ªÉ step n√†y fail d√π kh√¥ng c√≥ task/PID
      - name: üõë Stop scheduled task (if running) & free port 80
        run: |
          $ErrorActionPreference = 'SilentlyContinue'
          schtasks /End /TN "finnews247" 2>$null | Out-Null
          Start-Sleep -Seconds 1
          $pids = (Get-NetTCPConnection -LocalPort 80 -State Listen -ErrorAction SilentlyContinue | Select-Object -Expand OwningProcess -Unique)
          if ($pids) { $pids | % { Stop-Process -Id $_ -Force -ErrorAction SilentlyContinue } }
          exit 0
        continue-on-error: true

      - name: üîÑ Sync repo ‚Üí C:\apps\finnews247 (mirror, keep logs)
        run: |
          $src = "${env:GITHUB_WORKSPACE}"
          $dst = 'C:\apps\finnews247'
          robocopy $src $dst /MIR /XD .git .github node_modules .next logs | Out-Null
          $code = $LASTEXITCODE
          if ($code -le 7) { exit 0 } else { exit $code }

      # ƒë·ªÅ ph√≤ng JSON c√≥ BOM g√¢y 500
      - name: üßπ Strip BOM from JSON (prevent 500)
        run: |
          $dir = 'C:\apps\finnews247\data'
          if (Test-Path $dir) {
            Get-ChildItem $dir -Filter *.json -Recurse | ForEach-Object {
              $bytes = [System.IO.File]::ReadAllBytes($_.FullName)
              if ($bytes.Length -ge 3 -and $bytes[0] -eq 0xEF -and $bytes[1] -eq 0xBB -and $bytes[2] -eq 0xBF) {
                $content = [System.Text.Encoding]::UTF8.GetString($bytes,3,$bytes.Length-3)
                [System.IO.File]::WriteAllText($_.FullName, $content, [System.Text.Encoding]::UTF8)
              }
            }
          }

      - name: üü¢ Use Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: 'C:\apps\finnews247\package-lock.json'

      # QUAN TR·ªåNG: √©p c√†i c·∫£ devDependencies cho next-sitemap
      - name: üì¶ Install dependencies (include dev)
        working-directory: C:\apps\finnews247
        run: |
          # Clear any inherited NODE_ENV to avoid dev deps being skipped
          Remove-Item Env:\NODE_ENV -ErrorAction SilentlyContinue
          $env:NPM_CONFIG_PRODUCTION = "false"
          npm ci --no-audit --no-fund 2>$null
          if ($LASTEXITCODE -ne 0) { npm install --no-audit --no-fund }

      - name: üèóÔ∏è Build (Next.js)
        working-directory: C:\apps\finnews247
        env:
          NODE_ENV: production
        run: |
          npm run build

      # ƒë·ªÅ ph√≤ng script postbuild kh√¥ng ch·∫°y: g·ªçi npx tr·ª±c ti·∫øp (kh√¥ng fail n·∫øu thi·∫øu)
      - name: üß≠ Generate sitemap (best effort)
        working-directory: C:\apps\finnews247
        run: |
          npx next-sitemap || echo "skip next-sitemap"

      # ƒê·∫∑t script KH√îNG n·∫±m trong repo ƒë·ªÉ kh√¥ng b·ªã /MIR x√≥a
      - name: üßæ Create/refresh start script
        run: |
          $content = @"
          @echo off
          cd /d C:\apps\finnews247
          set "NODE_ENV=production"
          "C:\Program Files\nodejs\node.exe" node_modules\next\dist\bin\next start -p 80 1>>"C:\apps\finnews247\logs\out.log" 2>>"C:\apps\finnews247\logs\err.log"
"@
          Set-Content -Path "C:\ops\finnews247\start_finnews247.cmd" -Value $content -Encoding ASCII -NoNewline

      - name: üóìÔ∏è Create/Update Windows Scheduled Task
        run: |
          $taskName = "finnews247"
          $exists = schtasks /Query /TN $taskName 2>$null
          if (-not $?) {
            schtasks /Create /TN $taskName /SC ONSTART /RU SYSTEM /RL HIGHEST /TR "C:\ops\finnews247\start_finnews247.cmd" /F
          } else {
            schtasks /Change /TN $taskName /TR "C:\ops\finnews247\start_finnews247.cmd"
          }

      - name: ‚ñ∂Ô∏è Start app & health check
        run: |
          schtasks /Run /TN "finnews247" | Out-Null
          Start-Sleep -Seconds 3
          try {
            $r = Invoke-WebRequest -Uri "http://127.0.0.1/" -UseBasicParsing -TimeoutSec 8
            if ($r.StatusCode -lt 200 -or $r.StatusCode -ge 500) { throw "Bad status: $($r.StatusCode)" }
            "Health OK: $($r.StatusCode)"
          } catch {
            Write-Host "Health check failed: $($_.Exception.Message)" -ForegroundColor Yellow
          }

      # Kh√¥ng b·∫Øt bu·ªôc: warm cache ƒë·ªÉ truy c·∫≠p ƒë·∫ßu ti√™n nhanh h∆°n, v√† KH√îNG fail job
      - name: üî• Re-warm cache (optional)
        continue-on-error: true
        run: |
          $css = Get-ChildItem "C:\apps\finnews247\.next\static\css\*.css" -Name -ErrorAction SilentlyContinue
          foreach ($f in $css) { Invoke-WebRequest "http://127.0.0.1/_next/static/css/$f" -UseBasicParsing -TimeoutSec 8 | Out-Null }
          $chunks = Get-ChildItem "C:\apps\finnews247\.next\static\chunks\*.js" -Name -ErrorAction SilentlyContinue
          foreach ($f in $chunks) { Invoke-WebRequest "http://127.0.0.1/_next/static/chunks/$f" -UseBasicParsing -TimeoutSec 8 | Out-Null }
          $W=(320,640,828,1080,1200,1920)
          foreach ($w in $W) { Invoke-WebRequest "http://127.0.0.1/_next/image?url=%2Fimages%2Fnews94.jpg&w=$w&q=75" -UseBasicParsing -TimeoutSec 8 | Out-Null }
